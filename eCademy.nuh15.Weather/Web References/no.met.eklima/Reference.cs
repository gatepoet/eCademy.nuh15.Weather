//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace eCademy.nuh15.Weather.no.met.eklima {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.2001.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="MetDataServiceBinding", Namespace="http://no/met/metdata/MetDataService.wsdl")]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(no_met_metdata_CountyTypes))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(no_met_metdata_PrecipitationTypes))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(no_met_metdata_FlagProperties))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(no_met_metdata_StationProperties))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(no_met_metdata_ElementProperties))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(no_met_metdata_TimeSerieTypes))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(no_met_metdata_WeatherElement))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(no_met_metdata_Location))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(no_met_metdata_TimeStamp))]
    public partial class MetDataService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getMetDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback getControlInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTimeserieTypesPropertiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getElementsPropertiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getElementsFromTimeserieTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getElementsFromTimeserieTypeStationOperationCompleted;
        
        private System.Threading.SendOrPostCallback getStationsPropertiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getStationsFromTimeserieTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getStationsFromTimeserieTypeElemCodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getStationsFromTimeserieTypeStationsElemCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDateFormatOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFlagPropertiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPrecipitationTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getValidLanguagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCountyTypesOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public MetDataService() {
            this.Url = "http://eklima.met.no/metdata/MetDataService";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getMetDataCompletedEventHandler getMetDataCompleted;
        
        /// <remarks/>
        public event getControlInfoCompletedEventHandler getControlInfoCompleted;
        
        /// <remarks/>
        public event getTimeserieTypesPropertiesCompletedEventHandler getTimeserieTypesPropertiesCompleted;
        
        /// <remarks/>
        public event getElementsPropertiesCompletedEventHandler getElementsPropertiesCompleted;
        
        /// <remarks/>
        public event getElementsFromTimeserieTypeCompletedEventHandler getElementsFromTimeserieTypeCompleted;
        
        /// <remarks/>
        public event getElementsFromTimeserieTypeStationCompletedEventHandler getElementsFromTimeserieTypeStationCompleted;
        
        /// <remarks/>
        public event getStationsPropertiesCompletedEventHandler getStationsPropertiesCompleted;
        
        /// <remarks/>
        public event getStationsFromTimeserieTypeCompletedEventHandler getStationsFromTimeserieTypeCompleted;
        
        /// <remarks/>
        public event getStationsFromTimeserieTypeElemCodesCompletedEventHandler getStationsFromTimeserieTypeElemCodesCompleted;
        
        /// <remarks/>
        public event getStationsFromTimeserieTypeStationsElemCodeCompletedEventHandler getStationsFromTimeserieTypeStationsElemCodeCompleted;
        
        /// <remarks/>
        public event getDateFormatCompletedEventHandler getDateFormatCompleted;
        
        /// <remarks/>
        public event getFlagPropertiesCompletedEventHandler getFlagPropertiesCompleted;
        
        /// <remarks/>
        public event getPrecipitationTypesCompletedEventHandler getPrecipitationTypesCompleted;
        
        /// <remarks/>
        public event getValidLanguagesCompletedEventHandler getValidLanguagesCompleted;
        
        /// <remarks/>
        public event getCountyTypesCompletedEventHandler getCountyTypesCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="MetDataService", ResponseNamespace="MetDataService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public no_met_metdata_Metdata getMetData(string timeserietypeID, string format, string from, string to, string stations, string elements, string hours, string months, string username) {
            object[] results = this.Invoke("getMetData", new object[] {
                        timeserietypeID,
                        format,
                        from,
                        to,
                        stations,
                        elements,
                        hours,
                        months,
                        username});
            return ((no_met_metdata_Metdata)(results[0]));
        }
        
        /// <remarks/>
        public void getMetDataAsync(string timeserietypeID, string format, string from, string to, string stations, string elements, string hours, string months, string username) {
            this.getMetDataAsync(timeserietypeID, format, from, to, stations, elements, hours, months, username, null);
        }
        
        /// <remarks/>
        public void getMetDataAsync(string timeserietypeID, string format, string from, string to, string stations, string elements, string hours, string months, string username, object userState) {
            if ((this.getMetDataOperationCompleted == null)) {
                this.getMetDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMetDataOperationCompleted);
            }
            this.InvokeAsync("getMetData", new object[] {
                        timeserietypeID,
                        format,
                        from,
                        to,
                        stations,
                        elements,
                        hours,
                        months,
                        username}, this.getMetDataOperationCompleted, userState);
        }
        
        private void OngetMetDataOperationCompleted(object arg) {
            if ((this.getMetDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMetDataCompleted(this, new getMetDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="MetDataService", ResponseNamespace="MetDataService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string getControlInfo(string format, string from, string to, string stations, string elements, string hours, string months, string username) {
            object[] results = this.Invoke("getControlInfo", new object[] {
                        format,
                        from,
                        to,
                        stations,
                        elements,
                        hours,
                        months,
                        username});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getControlInfoAsync(string format, string from, string to, string stations, string elements, string hours, string months, string username) {
            this.getControlInfoAsync(format, from, to, stations, elements, hours, months, username, null);
        }
        
        /// <remarks/>
        public void getControlInfoAsync(string format, string from, string to, string stations, string elements, string hours, string months, string username, object userState) {
            if ((this.getControlInfoOperationCompleted == null)) {
                this.getControlInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetControlInfoOperationCompleted);
            }
            this.InvokeAsync("getControlInfo", new object[] {
                        format,
                        from,
                        to,
                        stations,
                        elements,
                        hours,
                        months,
                        username}, this.getControlInfoOperationCompleted, userState);
        }
        
        private void OngetControlInfoOperationCompleted(object arg) {
            if ((this.getControlInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getControlInfoCompleted(this, new getControlInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="MetDataService", ResponseNamespace="MetDataService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public no_met_metdata_TimeSerieTypes[] getTimeserieTypesProperties(string language, string timeserieTypes) {
            object[] results = this.Invoke("getTimeserieTypesProperties", new object[] {
                        language,
                        timeserieTypes});
            return ((no_met_metdata_TimeSerieTypes[])(results[0]));
        }
        
        /// <remarks/>
        public void getTimeserieTypesPropertiesAsync(string language, string timeserieTypes) {
            this.getTimeserieTypesPropertiesAsync(language, timeserieTypes, null);
        }
        
        /// <remarks/>
        public void getTimeserieTypesPropertiesAsync(string language, string timeserieTypes, object userState) {
            if ((this.getTimeserieTypesPropertiesOperationCompleted == null)) {
                this.getTimeserieTypesPropertiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTimeserieTypesPropertiesOperationCompleted);
            }
            this.InvokeAsync("getTimeserieTypesProperties", new object[] {
                        language,
                        timeserieTypes}, this.getTimeserieTypesPropertiesOperationCompleted, userState);
        }
        
        private void OngetTimeserieTypesPropertiesOperationCompleted(object arg) {
            if ((this.getTimeserieTypesPropertiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTimeserieTypesPropertiesCompleted(this, new getTimeserieTypesPropertiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="MetDataService", ResponseNamespace="MetDataService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public no_met_metdata_ElementProperties[] getElementsProperties(string language, string elem_codes) {
            object[] results = this.Invoke("getElementsProperties", new object[] {
                        language,
                        elem_codes});
            return ((no_met_metdata_ElementProperties[])(results[0]));
        }
        
        /// <remarks/>
        public void getElementsPropertiesAsync(string language, string elem_codes) {
            this.getElementsPropertiesAsync(language, elem_codes, null);
        }
        
        /// <remarks/>
        public void getElementsPropertiesAsync(string language, string elem_codes, object userState) {
            if ((this.getElementsPropertiesOperationCompleted == null)) {
                this.getElementsPropertiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetElementsPropertiesOperationCompleted);
            }
            this.InvokeAsync("getElementsProperties", new object[] {
                        language,
                        elem_codes}, this.getElementsPropertiesOperationCompleted, userState);
        }
        
        private void OngetElementsPropertiesOperationCompleted(object arg) {
            if ((this.getElementsPropertiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getElementsPropertiesCompleted(this, new getElementsPropertiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="MetDataService", ResponseNamespace="MetDataService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public no_met_metdata_ElementProperties[] getElementsFromTimeserieType(string timeserietypeID) {
            object[] results = this.Invoke("getElementsFromTimeserieType", new object[] {
                        timeserietypeID});
            return ((no_met_metdata_ElementProperties[])(results[0]));
        }
        
        /// <remarks/>
        public void getElementsFromTimeserieTypeAsync(string timeserietypeID) {
            this.getElementsFromTimeserieTypeAsync(timeserietypeID, null);
        }
        
        /// <remarks/>
        public void getElementsFromTimeserieTypeAsync(string timeserietypeID, object userState) {
            if ((this.getElementsFromTimeserieTypeOperationCompleted == null)) {
                this.getElementsFromTimeserieTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetElementsFromTimeserieTypeOperationCompleted);
            }
            this.InvokeAsync("getElementsFromTimeserieType", new object[] {
                        timeserietypeID}, this.getElementsFromTimeserieTypeOperationCompleted, userState);
        }
        
        private void OngetElementsFromTimeserieTypeOperationCompleted(object arg) {
            if ((this.getElementsFromTimeserieTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getElementsFromTimeserieTypeCompleted(this, new getElementsFromTimeserieTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="MetDataService", ResponseNamespace="MetDataService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public no_met_metdata_ElementProperties[] getElementsFromTimeserieTypeStation(string timeserietypeID, int stnr) {
            object[] results = this.Invoke("getElementsFromTimeserieTypeStation", new object[] {
                        timeserietypeID,
                        stnr});
            return ((no_met_metdata_ElementProperties[])(results[0]));
        }
        
        /// <remarks/>
        public void getElementsFromTimeserieTypeStationAsync(string timeserietypeID, int stnr) {
            this.getElementsFromTimeserieTypeStationAsync(timeserietypeID, stnr, null);
        }
        
        /// <remarks/>
        public void getElementsFromTimeserieTypeStationAsync(string timeserietypeID, int stnr, object userState) {
            if ((this.getElementsFromTimeserieTypeStationOperationCompleted == null)) {
                this.getElementsFromTimeserieTypeStationOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetElementsFromTimeserieTypeStationOperationCompleted);
            }
            this.InvokeAsync("getElementsFromTimeserieTypeStation", new object[] {
                        timeserietypeID,
                        stnr}, this.getElementsFromTimeserieTypeStationOperationCompleted, userState);
        }
        
        private void OngetElementsFromTimeserieTypeStationOperationCompleted(object arg) {
            if ((this.getElementsFromTimeserieTypeStationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getElementsFromTimeserieTypeStationCompleted(this, new getElementsFromTimeserieTypeStationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="MetDataService", ResponseNamespace="MetDataService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public no_met_metdata_StationProperties[] getStationsProperties(string stations, string username) {
            object[] results = this.Invoke("getStationsProperties", new object[] {
                        stations,
                        username});
            return ((no_met_metdata_StationProperties[])(results[0]));
        }
        
        /// <remarks/>
        public void getStationsPropertiesAsync(string stations, string username) {
            this.getStationsPropertiesAsync(stations, username, null);
        }
        
        /// <remarks/>
        public void getStationsPropertiesAsync(string stations, string username, object userState) {
            if ((this.getStationsPropertiesOperationCompleted == null)) {
                this.getStationsPropertiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetStationsPropertiesOperationCompleted);
            }
            this.InvokeAsync("getStationsProperties", new object[] {
                        stations,
                        username}, this.getStationsPropertiesOperationCompleted, userState);
        }
        
        private void OngetStationsPropertiesOperationCompleted(object arg) {
            if ((this.getStationsPropertiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getStationsPropertiesCompleted(this, new getStationsPropertiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="MetDataService", ResponseNamespace="MetDataService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public no_met_metdata_StationProperties[] getStationsFromTimeserieType(string timeserietypeID, string username) {
            object[] results = this.Invoke("getStationsFromTimeserieType", new object[] {
                        timeserietypeID,
                        username});
            return ((no_met_metdata_StationProperties[])(results[0]));
        }
        
        /// <remarks/>
        public void getStationsFromTimeserieTypeAsync(string timeserietypeID, string username) {
            this.getStationsFromTimeserieTypeAsync(timeserietypeID, username, null);
        }
        
        /// <remarks/>
        public void getStationsFromTimeserieTypeAsync(string timeserietypeID, string username, object userState) {
            if ((this.getStationsFromTimeserieTypeOperationCompleted == null)) {
                this.getStationsFromTimeserieTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetStationsFromTimeserieTypeOperationCompleted);
            }
            this.InvokeAsync("getStationsFromTimeserieType", new object[] {
                        timeserietypeID,
                        username}, this.getStationsFromTimeserieTypeOperationCompleted, userState);
        }
        
        private void OngetStationsFromTimeserieTypeOperationCompleted(object arg) {
            if ((this.getStationsFromTimeserieTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getStationsFromTimeserieTypeCompleted(this, new getStationsFromTimeserieTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="MetDataService", ResponseNamespace="MetDataService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public no_met_metdata_StationProperties[] getStationsFromTimeserieTypeElemCodes(string timeserietypeID, string elem_codes, string username) {
            object[] results = this.Invoke("getStationsFromTimeserieTypeElemCodes", new object[] {
                        timeserietypeID,
                        elem_codes,
                        username});
            return ((no_met_metdata_StationProperties[])(results[0]));
        }
        
        /// <remarks/>
        public void getStationsFromTimeserieTypeElemCodesAsync(string timeserietypeID, string elem_codes, string username) {
            this.getStationsFromTimeserieTypeElemCodesAsync(timeserietypeID, elem_codes, username, null);
        }
        
        /// <remarks/>
        public void getStationsFromTimeserieTypeElemCodesAsync(string timeserietypeID, string elem_codes, string username, object userState) {
            if ((this.getStationsFromTimeserieTypeElemCodesOperationCompleted == null)) {
                this.getStationsFromTimeserieTypeElemCodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetStationsFromTimeserieTypeElemCodesOperationCompleted);
            }
            this.InvokeAsync("getStationsFromTimeserieTypeElemCodes", new object[] {
                        timeserietypeID,
                        elem_codes,
                        username}, this.getStationsFromTimeserieTypeElemCodesOperationCompleted, userState);
        }
        
        private void OngetStationsFromTimeserieTypeElemCodesOperationCompleted(object arg) {
            if ((this.getStationsFromTimeserieTypeElemCodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getStationsFromTimeserieTypeElemCodesCompleted(this, new getStationsFromTimeserieTypeElemCodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="MetDataService", ResponseNamespace="MetDataService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public no_met_metdata_StationProperties[] getStationsFromTimeserieTypeStationsElemCode(string timeserietype, string stations, string elem_code, string username) {
            object[] results = this.Invoke("getStationsFromTimeserieTypeStationsElemCode", new object[] {
                        timeserietype,
                        stations,
                        elem_code,
                        username});
            return ((no_met_metdata_StationProperties[])(results[0]));
        }
        
        /// <remarks/>
        public void getStationsFromTimeserieTypeStationsElemCodeAsync(string timeserietype, string stations, string elem_code, string username) {
            this.getStationsFromTimeserieTypeStationsElemCodeAsync(timeserietype, stations, elem_code, username, null);
        }
        
        /// <remarks/>
        public void getStationsFromTimeserieTypeStationsElemCodeAsync(string timeserietype, string stations, string elem_code, string username, object userState) {
            if ((this.getStationsFromTimeserieTypeStationsElemCodeOperationCompleted == null)) {
                this.getStationsFromTimeserieTypeStationsElemCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetStationsFromTimeserieTypeStationsElemCodeOperationCompleted);
            }
            this.InvokeAsync("getStationsFromTimeserieTypeStationsElemCode", new object[] {
                        timeserietype,
                        stations,
                        elem_code,
                        username}, this.getStationsFromTimeserieTypeStationsElemCodeOperationCompleted, userState);
        }
        
        private void OngetStationsFromTimeserieTypeStationsElemCodeOperationCompleted(object arg) {
            if ((this.getStationsFromTimeserieTypeStationsElemCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getStationsFromTimeserieTypeStationsElemCodeCompleted(this, new getStationsFromTimeserieTypeStationsElemCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="MetDataService", ResponseNamespace="MetDataService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string getDateFormat() {
            object[] results = this.Invoke("getDateFormat", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getDateFormatAsync() {
            this.getDateFormatAsync(null);
        }
        
        /// <remarks/>
        public void getDateFormatAsync(object userState) {
            if ((this.getDateFormatOperationCompleted == null)) {
                this.getDateFormatOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDateFormatOperationCompleted);
            }
            this.InvokeAsync("getDateFormat", new object[0], this.getDateFormatOperationCompleted, userState);
        }
        
        private void OngetDateFormatOperationCompleted(object arg) {
            if ((this.getDateFormatCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDateFormatCompleted(this, new getDateFormatCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="MetDataService", ResponseNamespace="MetDataService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public no_met_metdata_FlagProperties[] getFlagProperties(string language, string flagsId) {
            object[] results = this.Invoke("getFlagProperties", new object[] {
                        language,
                        flagsId});
            return ((no_met_metdata_FlagProperties[])(results[0]));
        }
        
        /// <remarks/>
        public void getFlagPropertiesAsync(string language, string flagsId) {
            this.getFlagPropertiesAsync(language, flagsId, null);
        }
        
        /// <remarks/>
        public void getFlagPropertiesAsync(string language, string flagsId, object userState) {
            if ((this.getFlagPropertiesOperationCompleted == null)) {
                this.getFlagPropertiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFlagPropertiesOperationCompleted);
            }
            this.InvokeAsync("getFlagProperties", new object[] {
                        language,
                        flagsId}, this.getFlagPropertiesOperationCompleted, userState);
        }
        
        private void OngetFlagPropertiesOperationCompleted(object arg) {
            if ((this.getFlagPropertiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFlagPropertiesCompleted(this, new getFlagPropertiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="MetDataService", ResponseNamespace="MetDataService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public no_met_metdata_PrecipitationTypes[] getPrecipitationTypes(string language, string precipitationTypesId) {
            object[] results = this.Invoke("getPrecipitationTypes", new object[] {
                        language,
                        precipitationTypesId});
            return ((no_met_metdata_PrecipitationTypes[])(results[0]));
        }
        
        /// <remarks/>
        public void getPrecipitationTypesAsync(string language, string precipitationTypesId) {
            this.getPrecipitationTypesAsync(language, precipitationTypesId, null);
        }
        
        /// <remarks/>
        public void getPrecipitationTypesAsync(string language, string precipitationTypesId, object userState) {
            if ((this.getPrecipitationTypesOperationCompleted == null)) {
                this.getPrecipitationTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPrecipitationTypesOperationCompleted);
            }
            this.InvokeAsync("getPrecipitationTypes", new object[] {
                        language,
                        precipitationTypesId}, this.getPrecipitationTypesOperationCompleted, userState);
        }
        
        private void OngetPrecipitationTypesOperationCompleted(object arg) {
            if ((this.getPrecipitationTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPrecipitationTypesCompleted(this, new getPrecipitationTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="MetDataService", ResponseNamespace="MetDataService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string[] getValidLanguages() {
            object[] results = this.Invoke("getValidLanguages", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getValidLanguagesAsync() {
            this.getValidLanguagesAsync(null);
        }
        
        /// <remarks/>
        public void getValidLanguagesAsync(object userState) {
            if ((this.getValidLanguagesOperationCompleted == null)) {
                this.getValidLanguagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetValidLanguagesOperationCompleted);
            }
            this.InvokeAsync("getValidLanguages", new object[0], this.getValidLanguagesOperationCompleted, userState);
        }
        
        private void OngetValidLanguagesOperationCompleted(object arg) {
            if ((this.getValidLanguagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getValidLanguagesCompleted(this, new getValidLanguagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="MetDataService", ResponseNamespace="MetDataService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public no_met_metdata_CountyTypes[] getCountyTypes(string language, string countiesId) {
            object[] results = this.Invoke("getCountyTypes", new object[] {
                        language,
                        countiesId});
            return ((no_met_metdata_CountyTypes[])(results[0]));
        }
        
        /// <remarks/>
        public void getCountyTypesAsync(string language, string countiesId) {
            this.getCountyTypesAsync(language, countiesId, null);
        }
        
        /// <remarks/>
        public void getCountyTypesAsync(string language, string countiesId, object userState) {
            if ((this.getCountyTypesOperationCompleted == null)) {
                this.getCountyTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCountyTypesOperationCompleted);
            }
            this.InvokeAsync("getCountyTypes", new object[] {
                        language,
                        countiesId}, this.getCountyTypesOperationCompleted, userState);
        }
        
        private void OngetCountyTypesOperationCompleted(object arg) {
            if ((this.getCountyTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCountyTypesCompleted(this, new getCountyTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.2001.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://no.met.metdata/IMetDataService.xsd")]
    public partial class no_met_metdata_Metdata {
        
        private System.DateTime createdField;
        
        private string typeField;
        
        private no_met_metdata_TimeStamp[] timeStampField;
        
        /// <remarks/>
        public System.DateTime created {
            get {
                return this.createdField;
            }
            set {
                this.createdField = value;
            }
        }
        
        /// <remarks/>
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public no_met_metdata_TimeStamp[] timeStamp {
            get {
                return this.timeStampField;
            }
            set {
                this.timeStampField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.2001.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://no.met.metdata/IMetDataService.xsd")]
    public partial class no_met_metdata_TimeStamp {
        
        private System.DateTime fromField;
        
        private no_met_metdata_Location[] locationField;
        
        private System.DateTime toField;
        
        /// <remarks/>
        public System.DateTime from {
            get {
                return this.fromField;
            }
            set {
                this.fromField = value;
            }
        }
        
        /// <remarks/>
        public no_met_metdata_Location[] location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime to {
            get {
                return this.toField;
            }
            set {
                this.toField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.2001.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://no.met.metdata/IMetDataService.xsd")]
    public partial class no_met_metdata_Location {
        
        private int idField;
        
        private string typeField;
        
        private no_met_metdata_WeatherElement[] weatherElementField;
        
        /// <remarks/>
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public no_met_metdata_WeatherElement[] weatherElement {
            get {
                return this.weatherElementField;
            }
            set {
                this.weatherElementField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.2001.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://no.met.metdata/IMetDataService.xsd")]
    public partial class no_met_metdata_WeatherElement {
        
        private string idField;
        
        private int qualityField;
        
        private string valueField;
        
        /// <remarks/>
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int quality {
            get {
                return this.qualityField;
            }
            set {
                this.qualityField = value;
            }
        }
        
        /// <remarks/>
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.2001.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://no.met.metdata/IMetDataService.xsd")]
    public partial class no_met_metdata_CountyTypes {
        
        private string languageField;
        
        private string countyNameField;
        
        private int countyIDField;
        
        /// <remarks/>
        public string language {
            get {
                return this.languageField;
            }
            set {
                this.languageField = value;
            }
        }
        
        /// <remarks/>
        public string countyName {
            get {
                return this.countyNameField;
            }
            set {
                this.countyNameField = value;
            }
        }
        
        /// <remarks/>
        public int countyID {
            get {
                return this.countyIDField;
            }
            set {
                this.countyIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.2001.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://no.met.metdata/IMetDataService.xsd")]
    public partial class no_met_metdata_PrecipitationTypes {
        
        private string languageField;
        
        private string precipitationCodeField;
        
        private int precipitationIDField;
        
        private string precipitationDescriptionField;
        
        /// <remarks/>
        public string language {
            get {
                return this.languageField;
            }
            set {
                this.languageField = value;
            }
        }
        
        /// <remarks/>
        public string precipitationCode {
            get {
                return this.precipitationCodeField;
            }
            set {
                this.precipitationCodeField = value;
            }
        }
        
        /// <remarks/>
        public int precipitationID {
            get {
                return this.precipitationIDField;
            }
            set {
                this.precipitationIDField = value;
            }
        }
        
        /// <remarks/>
        public string precipitationDescription {
            get {
                return this.precipitationDescriptionField;
            }
            set {
                this.precipitationDescriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.2001.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://no.met.metdata/IMetDataService.xsd")]
    public partial class no_met_metdata_FlagProperties {
        
        private string languageField;
        
        private string flagNameField;
        
        private int flagIDField;
        
        private string flagDescriptionField;
        
        private string flagCodeField;
        
        /// <remarks/>
        public string language {
            get {
                return this.languageField;
            }
            set {
                this.languageField = value;
            }
        }
        
        /// <remarks/>
        public string flagName {
            get {
                return this.flagNameField;
            }
            set {
                this.flagNameField = value;
            }
        }
        
        /// <remarks/>
        public int flagID {
            get {
                return this.flagIDField;
            }
            set {
                this.flagIDField = value;
            }
        }
        
        /// <remarks/>
        public string flagDescription {
            get {
                return this.flagDescriptionField;
            }
            set {
                this.flagDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string flagCode {
            get {
                return this.flagCodeField;
            }
            set {
                this.flagCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.2001.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://no.met.metdata/IMetDataService.xsd")]
    public partial class no_met_metdata_StationProperties {
        
        private string nameField;
        
        private int stnrField;
        
        private int wmoNoField;
        
        private int amslField;
        
        private string departmentField;
        
        private int municipalityNoField;
        
        private int fromYearField;
        
        private int fromMonthField;
        
        private int fromDayField;
        
        private int toYearField;
        
        private int toMonthField;
        
        private int toDayField;
        
        private int utm_eField;
        
        private int utm_nField;
        
        private int utm_zoneField;
        
        private double latDecField;
        
        private double lonDecField;
        
        private string latLonFmtField;
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int stnr {
            get {
                return this.stnrField;
            }
            set {
                this.stnrField = value;
            }
        }
        
        /// <remarks/>
        public int wmoNo {
            get {
                return this.wmoNoField;
            }
            set {
                this.wmoNoField = value;
            }
        }
        
        /// <remarks/>
        public int amsl {
            get {
                return this.amslField;
            }
            set {
                this.amslField = value;
            }
        }
        
        /// <remarks/>
        public string department {
            get {
                return this.departmentField;
            }
            set {
                this.departmentField = value;
            }
        }
        
        /// <remarks/>
        public int municipalityNo {
            get {
                return this.municipalityNoField;
            }
            set {
                this.municipalityNoField = value;
            }
        }
        
        /// <remarks/>
        public int fromYear {
            get {
                return this.fromYearField;
            }
            set {
                this.fromYearField = value;
            }
        }
        
        /// <remarks/>
        public int fromMonth {
            get {
                return this.fromMonthField;
            }
            set {
                this.fromMonthField = value;
            }
        }
        
        /// <remarks/>
        public int fromDay {
            get {
                return this.fromDayField;
            }
            set {
                this.fromDayField = value;
            }
        }
        
        /// <remarks/>
        public int toYear {
            get {
                return this.toYearField;
            }
            set {
                this.toYearField = value;
            }
        }
        
        /// <remarks/>
        public int toMonth {
            get {
                return this.toMonthField;
            }
            set {
                this.toMonthField = value;
            }
        }
        
        /// <remarks/>
        public int toDay {
            get {
                return this.toDayField;
            }
            set {
                this.toDayField = value;
            }
        }
        
        /// <remarks/>
        public int utm_e {
            get {
                return this.utm_eField;
            }
            set {
                this.utm_eField = value;
            }
        }
        
        /// <remarks/>
        public int utm_n {
            get {
                return this.utm_nField;
            }
            set {
                this.utm_nField = value;
            }
        }
        
        /// <remarks/>
        public int utm_zone {
            get {
                return this.utm_zoneField;
            }
            set {
                this.utm_zoneField = value;
            }
        }
        
        /// <remarks/>
        public double latDec {
            get {
                return this.latDecField;
            }
            set {
                this.latDecField = value;
            }
        }
        
        /// <remarks/>
        public double lonDec {
            get {
                return this.lonDecField;
            }
            set {
                this.lonDecField = value;
            }
        }
        
        /// <remarks/>
        public string latLonFmt {
            get {
                return this.latLonFmtField;
            }
            set {
                this.latLonFmtField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.2001.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://no.met.metdata/IMetDataService.xsd")]
    public partial class no_met_metdata_ElementProperties {
        
        private string elemCodeField;
        
        private int elemNoField;
        
        private string descriptionField;
        
        private string unitField;
        
        private string nameField;
        
        private string elemGroupField;
        
        private string languageField;
        
        private System.DateTime fromdateField;
        
        private System.DateTime todateField;
        
        /// <remarks/>
        public string elemCode {
            get {
                return this.elemCodeField;
            }
            set {
                this.elemCodeField = value;
            }
        }
        
        /// <remarks/>
        public int elemNo {
            get {
                return this.elemNoField;
            }
            set {
                this.elemNoField = value;
            }
        }
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string unit {
            get {
                return this.unitField;
            }
            set {
                this.unitField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string elemGroup {
            get {
                return this.elemGroupField;
            }
            set {
                this.elemGroupField = value;
            }
        }
        
        /// <remarks/>
        public string language {
            get {
                return this.languageField;
            }
            set {
                this.languageField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fromdate {
            get {
                return this.fromdateField;
            }
            set {
                this.fromdateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime todate {
            get {
                return this.todateField;
            }
            set {
                this.todateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.2001.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://no.met.metdata/IMetDataService.xsd")]
    public partial class no_met_metdata_TimeSerieTypes {
        
        private string languageField;
        
        private string tableField;
        
        private string elemTableField;
        
        private string serieTypeNameField;
        
        private int serieTypeIDField;
        
        private string serieTypeDescriptionField;
        
        /// <remarks/>
        public string language {
            get {
                return this.languageField;
            }
            set {
                this.languageField = value;
            }
        }
        
        /// <remarks/>
        public string table {
            get {
                return this.tableField;
            }
            set {
                this.tableField = value;
            }
        }
        
        /// <remarks/>
        public string elemTable {
            get {
                return this.elemTableField;
            }
            set {
                this.elemTableField = value;
            }
        }
        
        /// <remarks/>
        public string serieTypeName {
            get {
                return this.serieTypeNameField;
            }
            set {
                this.serieTypeNameField = value;
            }
        }
        
        /// <remarks/>
        public int serieTypeID {
            get {
                return this.serieTypeIDField;
            }
            set {
                this.serieTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public string serieTypeDescription {
            get {
                return this.serieTypeDescriptionField;
            }
            set {
                this.serieTypeDescriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.2001.0")]
    public delegate void getMetDataCompletedEventHandler(object sender, getMetDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.2001.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMetDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMetDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public no_met_metdata_Metdata Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((no_met_metdata_Metdata)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.2001.0")]
    public delegate void getControlInfoCompletedEventHandler(object sender, getControlInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.2001.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getControlInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getControlInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.2001.0")]
    public delegate void getTimeserieTypesPropertiesCompletedEventHandler(object sender, getTimeserieTypesPropertiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.2001.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTimeserieTypesPropertiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTimeserieTypesPropertiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public no_met_metdata_TimeSerieTypes[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((no_met_metdata_TimeSerieTypes[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.2001.0")]
    public delegate void getElementsPropertiesCompletedEventHandler(object sender, getElementsPropertiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.2001.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getElementsPropertiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getElementsPropertiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public no_met_metdata_ElementProperties[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((no_met_metdata_ElementProperties[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.2001.0")]
    public delegate void getElementsFromTimeserieTypeCompletedEventHandler(object sender, getElementsFromTimeserieTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.2001.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getElementsFromTimeserieTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getElementsFromTimeserieTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public no_met_metdata_ElementProperties[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((no_met_metdata_ElementProperties[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.2001.0")]
    public delegate void getElementsFromTimeserieTypeStationCompletedEventHandler(object sender, getElementsFromTimeserieTypeStationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.2001.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getElementsFromTimeserieTypeStationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getElementsFromTimeserieTypeStationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public no_met_metdata_ElementProperties[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((no_met_metdata_ElementProperties[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.2001.0")]
    public delegate void getStationsPropertiesCompletedEventHandler(object sender, getStationsPropertiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.2001.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getStationsPropertiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getStationsPropertiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public no_met_metdata_StationProperties[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((no_met_metdata_StationProperties[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.2001.0")]
    public delegate void getStationsFromTimeserieTypeCompletedEventHandler(object sender, getStationsFromTimeserieTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.2001.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getStationsFromTimeserieTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getStationsFromTimeserieTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public no_met_metdata_StationProperties[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((no_met_metdata_StationProperties[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.2001.0")]
    public delegate void getStationsFromTimeserieTypeElemCodesCompletedEventHandler(object sender, getStationsFromTimeserieTypeElemCodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.2001.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getStationsFromTimeserieTypeElemCodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getStationsFromTimeserieTypeElemCodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public no_met_metdata_StationProperties[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((no_met_metdata_StationProperties[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.2001.0")]
    public delegate void getStationsFromTimeserieTypeStationsElemCodeCompletedEventHandler(object sender, getStationsFromTimeserieTypeStationsElemCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.2001.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getStationsFromTimeserieTypeStationsElemCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getStationsFromTimeserieTypeStationsElemCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public no_met_metdata_StationProperties[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((no_met_metdata_StationProperties[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.2001.0")]
    public delegate void getDateFormatCompletedEventHandler(object sender, getDateFormatCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.2001.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDateFormatCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDateFormatCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.2001.0")]
    public delegate void getFlagPropertiesCompletedEventHandler(object sender, getFlagPropertiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.2001.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFlagPropertiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFlagPropertiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public no_met_metdata_FlagProperties[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((no_met_metdata_FlagProperties[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.2001.0")]
    public delegate void getPrecipitationTypesCompletedEventHandler(object sender, getPrecipitationTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.2001.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPrecipitationTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPrecipitationTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public no_met_metdata_PrecipitationTypes[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((no_met_metdata_PrecipitationTypes[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.2001.0")]
    public delegate void getValidLanguagesCompletedEventHandler(object sender, getValidLanguagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.2001.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getValidLanguagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getValidLanguagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.2001.0")]
    public delegate void getCountyTypesCompletedEventHandler(object sender, getCountyTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.2001.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCountyTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCountyTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public no_met_metdata_CountyTypes[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((no_met_metdata_CountyTypes[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591